# Build Xcode scheme and create test coverage report

parameters:
  - name: buildScheme
    type: string
    default: 'AzureCommunicationUICalling'
    values:
      - AzureCommunicationUICalling
      - AzureCommunicationUIChat
  - name: workingDirectory
    type: string
    default: 'AzureCommunicationUI'

steps:
  - task: CocoaPods@0
    displayName: "pod install --repo-update"
    inputs:
      workingDirectory: ${{ parameters.workingDirectory }}
      forceRepoUpdate: true
      projectDirectory: ${{ parameters.workingDirectory }}

  - script: |
      Pods/SwiftLint/swiftlint version 
    workingDirectory: AzureCommunicationUI
    displayName: "SwiftLint Version Check"

  - script: |
      Pods/SwiftLint/swiftlint 
    workingDirectory: AzureCommunicationUI
    displayName: "SwiftLint Manual Pre-Check"


  - script: |
      swift build -v \
        -Xswiftc "-sdk" \
        -Xswiftc "`xcrun --sdk iphonesimulator --show-sdk-path`" \
        -Xswiftc "-target" \
        -Xswiftc "x86_64-apple-ios16.0-simulator"
      xcodebuild test -scheme AzureCommunicationUICommon -sdk "`xcrun --sdk iphonesimulator --show-sdk-path`" -destination "name=iPhone 15"
    workingDirectory: AzureCommunicationUI/sdk/AzureCommunicationUICommon
    displayName: "Build and test AzureCommunicationUICommon"

  - script: |
      case "${{ parameters.buildScheme }}" in
        AzureCommunicationUICalling)
          SLATHER_SOURCE_FILE=ui-calling-slather.yml
          ;;
        AzureCommunicationUIChat)
          SLATHER_SOURCE_FILE=ui-chat-slather.yml
          ;;
      esac
     
      SLATHER_FILE=$(system.defaultWorkingDirectory)/${{ parameters.workingDirectory }}/.slather.yml
      cat ../eng/slather/$SLATHER_SOURCE_FILE > $SLATHER_FILE

    displayName: "Inject .slather.yml file"
    workingDirectory: ${{ parameters.workingDirectory }}

  - task: Xcode@5
    displayName: "Xcode build ${{ parameters.buildScheme }} scheme"
    inputs:
      configuration: Release
      sdk: iphoneos
      xcWorkspacePath: AzureCommunicationUI/AzureCommunicationUI.xcworkspace
      scheme: ${{ parameters.buildScheme }}
      xcodeVersion: default
      args: "-verbose"

  - task: Xcode@5
    displayName: "Xcode Unit Test ${{ parameters.buildScheme }}"
    inputs:
      actions: test
      configuration: Debug
      sdk: iphoneos
      xcWorkspacePath: AzureCommunicationUI/AzureCommunicationUI.xcworkspace
      scheme: ${{ parameters.buildScheme }}
      xcodeVersion: default
      destinationPlatformOption: iOS
      destinationSimulators: "iPhone 15"
      publishJUnitResults: true

  - script: |
      case "${{ parameters.buildScheme }}" in
        AzureCommunicationUICalling)
          COBERTURA_TARGET_FILENAME=calling-cobertura.xml
          ;;
        AzureCommunicationUIChat)
          COBERTURA_TARGET_FILENAME=chat-cobertura.xml
          ;;
      esac

      slather
      mv slather-report/cobertura.xml $(System.ArtifactsDirectory)/$COBERTURA_TARGET_FILENAME
    
    displayName: "Run slather for ${{ parameters.buildScheme }}"
    workingDirectory: ${{ parameters.workingDirectory }}
