# Build Xcode scheme and create test coverage report

parameters:
  - name: buildScheme
    type: string
    default: 'AzureCommunicationUICalling'
    values:
      - AzureCommunicationUICalling
      - AzureCommunicationUIChat
  - name: workingDirectory
    type: string
    default: 'AzureCommunicationUI'

steps:
  - task: CocoaPods@0
    displayName: "pod install"
    inputs:
      workingDirectory: ${{ parameters.workingDirectory }}
      forceRepoUpdate: true
      projectDirectory: ${{ parameters.workingDirectory }}

  - script: |
      swift build -v \
        -Xswiftc "-sdk" \
        -Xswiftc "`xcrun --sdk iphonesimulator --show-sdk-path`" \
        -Xswiftc "-target" \
        -Xswiftc "x86_64-apple-ios14.0-simulator"
      xcodebuild test -scheme AzureCommunicationUICommon -sdk "`xcrun --sdk iphonesimulator --show-sdk-path`" -destination "name=iPhone 13"
    workingDirectory: AzureCommunicationUI/sdk/AzureCommunicationUICommon
    displayName: "Build and test AzureCommunicationUICommon"

  - script: |
      if [ "$[parameters.buildScheme]" -eq "AzureCommunicationUICalling" ]; then
        export SLATHER_SOURCE_FILE=ui-calling-slather.yml
      fi
      export SLATHER_FILE=$(system.defaultWorkingDirectory)/${{ parameters.workingDirectory }}/.slather.yml
      cat ../eng/slather/$(SLATHER_SOURCE_FILE) > $SLATHER_FILE
      cat $SLATHER_FILE
    displayName: "Inject Calling .slather.yml file"
    # $[ if eq(parameters.buildScheme, 'AzureCommunicationUIChat') ]:
    #   SLATHER_SOURCE_FILE: 'ui-chat-slather.yml'
  
    workingDirectory: ${{ parameters.workingDirectory }}

  - task: Xcode@5
    displayName: "Xcode build ${{ parameters.buildScheme }} scheme"
    inputs:
      configuration: Release
      sdk: iphoneos
      xcWorkspacePath: AzureCommunicationUI/AzureCommunicationUI.xcworkspace
      scheme: ${{ parameters.buildScheme }}
      xcodeVersion: default
      args: "-verbose"

  - task: Xcode@5
    displayName: "Xcode Unit Test ${{ parameters.buildScheme }}"
    inputs:
      actions: test
      configuration: Debug
      sdk: iphoneos
      xcWorkspacePath: AzureCommunicationUI/AzureCommunicationUI.xcworkspace
      scheme: ${{ parameters.buildScheme }}
      xcodeVersion: default
      destinationPlatformOption: iOS
      destinationSimulators: "iPhone 12 Pro"
      publishJUnitResults: true

  - script: |
      if [ "$[parameters.buildScheme]" -eq "AzureCommunicationUICalling" ]; then
        export COBERTURA_TARGET_FILENAME=calling-cobertura.xml
      fi
      slather
      mv slather-report/cobertura.xml $(System.ArtifactsDirectory)/$(COBERTURA_TARGET_FILENAME)
    displayName: "Run slather for ${{ parameters.buildScheme }}"
    # env:
      # ${{ if eq(parameters.buildScheme, 'AzureCommunicationUICalling') }}:
      #   : 
      # ${{ if eq(parameters.buildScheme, 'AzureCommunicationUIChat') }}:
      #   COBERTURA_TARGET_FILENAME: 'chat-cobertura.xml'

    workingDirectory: ${{ parameters.workingDirectory }}
