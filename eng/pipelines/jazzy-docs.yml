# Jazzy Docs Pipeline
resources:
  repositories:
  - repository: internal_tools_acs-mobile-ui
    type: git
    name: SCC/internal_tools_acs-mobile-ui
    ref: feature/add-jazzy-function-app

# Manual runs only
trigger: none

pool:
    name: vsts-mac-1231-xcode-1331
    demands: xcode

jobs:
  - job: BuildDeployJazzy
    displayName: "Build and Deploy Jazzy Docs"
    steps:
    # 1. environment set up
      - task: NodeTool@0
        displayName: "1.1 environment set up - install nodejs"
        inputs:
          versionSource: 'spec'
          versionSpec: '6.x'
      - script: |
           softwareupdate --list
           softwareupdate -i "Command Line Tools for Xcode-13.4"
        displayName: "1.2 environment set up - xcode update"
    
    # 2. clone repos (data source)
      - checkout: internal_tools_acs-mobile-ui
        path: $(ado-repo)
        displayName: "2.1 clone repos (data source) - functino app"
      - checkout: self
        path: communication-ui-library-ios
        displayName: "2.2 clone repos (data source) - SDK repo"
    # 3. generate Jazzy docs and replace it in fucntion app  
      - script: |
            jazzy -version
        displayName: "3.1 jazzy check"
      - script: |
            cd $(Pipeline.Workspace)/communication-ui-library-ios/eng/jazzy
            jazzy --config AzureCommunicationUICalling.yml
        displayName: "3.2 Run Jazzy for Calling - AzureCommunicationUICalling"
      - script: |
            cp -Rf $(Pipeline.Workspace)/communication-ui-library-ios/build/jazzy/AzureCommunicationUICalling $(Pipeline.Workspace)/$(ado-repo)/acs_ui_api_doc_jazzy/AzureCommunicationUICalling
        displayName: "3.3 Replace Calling Jazzy doc in function app"
      - script: |
            cd $(Pipeline.Workspace)/communication-ui-library-ios/eng/jazzy
            jazzy --config AzureCommunicationUIChat.yml
        displayName: "3.4 Run Jazzy for Chat - AzureCommunicationUIChat"
      - script: |
            cp -Rf $(Pipeline.Workspace)/communication-ui-library-ios/build/jazzy/AzureCommunicationUIChat $(Pipeline.Workspace)/$(ado-repo)/acs_ui_api_doc_jazzy/AzureCommunicationUIChat
        displayName: "3.5 Replace Chat Jazzy doc in function app"
    # 4. build the function app and prepare for deployment 
      - bash: |
          ls 
          echo "-----"
          cd $(Pipeline.Workspace)/$(ado-repo)/acs_ui_api_doc_jazzy
          echo "-----"
          ls
          npm install typescript
          if [ -f extensions.csproj ]
          then
              dotnet build extensions.csproj --output ./bin
          fi
          npm install 
          npm run build --if-present
          npm prune --production
        displayName: "4. build function app with latest doc"
    # 5. update root endpoint to api/sdk so traffic can be routed properly
      - bash: |
          cd $(Pipeline.Workspace)/$(ado-repo)/acs_ui_api_doc_jazzy
          ls
          echo "starting endpoint update...."
          sh ./endpoint-update.sh "AzureCommunicationUIChat"
          echo "----------"
          sh ./endpoint-update.sh "AzureCommunicationUICalling"
          echo "----------"
          echo "done!"
        displayName: "5. Update root endpoint"
    # 6. Archive function app
      - task: ArchiveFiles@2
        displayName: "6. Archive function app"
        inputs:
          rootFolderOrFile: "$(Pipeline.Workspace)/$(ado-repo)/acs_ui_api_doc_jazzy"
          includeRootFolder: false
          archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"
    # 7. publish the artifacts of the function app
      - task: PublishBuildArtifacts@1
        displayName: "7. Publish the artifacts"
        inputs:
          PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
          artifactName: 'drop'
    # 8. deploy to azure resource group
      - task: AzureFunctionApp@1
        displayName: "8. Deploy to azure resource group"
        inputs:
          azureSubscription: $(ado)
          appType: functionAppLinux # default is functionApp
          appName: john-jazzy-test
          package: $(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip
    # 9. done
      - bash: |
          echo "------"
          echo "Check doc for chat at http://john-jazzy-test.azurewebsites.net/api/AzureCommunicationUIChat"
          echo "------"
          echo "Check doc for calling at http://john-jazzy-test.azurewebsites.net/api/AzureCommunicationUICalling"
        displayName: "9. Endpoint available"
