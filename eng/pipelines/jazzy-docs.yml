# Jazzy Docs Pipeline
resources:
  repositories:
  - repository: internal_tools_acs-mobile-ui
    type: git
    name: SCC/internal_tools_acs-mobile-ui
    ref: feature/add-jazzy-function-app

# Manual runs only
trigger: none

parameters:
  - name: TargetProject
    type: string
    values:
      - AzureCommunicationUICalling
      - AzureCommunicationUIChat
    default: 'AzureCommunicationUIChat'

pool:
    name: vsts-mac-1231-xcode-1331
    demands: xcode

jobs:
  - job: BuildJazzy
    displayName: "Build API docs with Jazzy Gem"
    steps:
      # - task: UseRubyVersion@0
      #   inputs:
      #     versionSpec: '>= 1.0'

      # - script: |
      #     gem install jazzy
      #   displayName: "Install Jazzy Gem"
      - task: NodeTool@0
        inputs:
          versionSource: 'spec'
          versionSpec: '6.x'
      - script: az --version
      - script: ls $(Pipeline.Workspace)
      - script: ls $(system.defaultWorkingDirectory)
      - checkout: internal_tools_acs-mobile-ui
        path: internal_tools_acs-mobile-ui-1
      - checkout: self
        path: communication-ui-library-ios-1
      - script: ls $(Pipeline.Workspace)
      # - script: zip -r output_file.zip $(Pipeline.Workspace)/internal_tools_acs-mobile-ui-1/acs_ui_api_doc_jazzy
      - bash: |
          ls 
          echo "-----"
          cd $(Pipeline.Workspace)/internal_tools_acs-mobile-ui-1/acs_ui_api_doc_jazzy
          echo "-----"
          ls
          npm install typescript
          if [ -f extensions.csproj ]
          then
              dotnet build extensions.csproj --output ./bin
          fi
          npm install 
          npm run build --if-present
          npm prune --production
      - bash: |
          cat index.html | sed -e "s/href=\"Classes/href=\"\\/api\\/$(TargetProject)\\/Classes/" | sed -e "s/href=\"Structs/href=\"\\/api\\/$(TargetProject)\\/Structs/" | sed -e "s/src=\"js/src=\"\\/api\\/$(TargetProject)\\/js/" | sed -e "s/href=\"css/href=\"\\/api\\/$(TargetProject)\\/css/" | sed -e "s/src=\"img/src=\"\\/api\\/$(TargetProject)\\/img/" | sed -e "s/href=\"index/href=\"\\/api\\/$(TargetProject)\\/index/" > index-temp.html
          mv index-temp.html index.html
      - task: ArchiveFiles@2
        displayName: "Archive files"
        inputs:
          rootFolderOrFile: "$(Pipeline.Workspace)/internal_tools_acs-mobile-ui-1/acs_ui_api_doc_jazzy"
          includeRootFolder: false
          archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
          artifactName: 'drop'
      - task: AzureFunctionApp@1 
        inputs:
          azureSubscription: $(ado)
          appType: functionAppLinux # default is functionApp
          appName: john-jazzy-test
          package: $(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip
      #- script: |
      #    JAZZY_CONFIG_FILE=$(system.defaultWorkingDirectory)/eng/jazzy/${{ variables['TargetProject'] }}.yml
      #    jazzy --config $JAZZY_CONFIG_FILE
        # displayName: "Run Jazzy on $(TargetProject)"
        # workingDirectory: AzureCommunicationUI/sdk/${{ variables['TargetProject'] }}
      #- task: AzureCLI@2
      #  inputs:
      #    scriptType: 'bash'
      #    azureSubscription: $(ado)
      #    scriptLocation: 'inlineScript'
      #    inlineScript: echo "Hello" && az group list -otable && az configure --defaults group=rg-acs-ui-dev && az functionapp deployment source config-zip -n john-jazzy-test --src output_file.zip --resource-group rg-acs-ui-dev
          # az configure --defaults group=rg-acs-ui-dev && az functionapp deployment source config-zip -n john-jazzy-test --src output_file.zip --resource-group rg-acs-ui-dev 
      # Take Jazzy results and override local copy in 'acs_ui_api_doc_jazzy'
      
      # Deploy jazzy app
