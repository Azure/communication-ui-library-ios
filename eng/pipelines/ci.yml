# CI Pipeline for
# Performs basic testing for PRs and pushes to specific branches

# Run on pushes to these branches
trigger:
  branches:
    include:
      - main
      - develop
      - release/*
      - feature/*

# Run on PRs to these branches
pr:
  - main
  - develop
  - release/*

jobs:
  - job: BuildCalling
    displayName: "Build Calling UI Library"
    pool:
      name: vsts-mac-1231-xcode-1331
      demands: xcode
    steps:
      - task: servicetree-link-build-task@1
        displayName: "ServiceTree: [$(BuildOutputUsage)] "
        inputs:
          ServiceTreeGateway: "ServiceTree Gateway"
          Service: "e38fcba7-191b-47ad-bb71-aeff7c983e3f"
        condition: always()

      - task: CocoaPods@0
        displayName: "pod install"
        inputs:
          workingDirectory: AzureCommunicationUI
          forceRepoUpdate: true
          projectDirectory: AzureCommunicationUI

      - script: |
          swift build -v \
            -Xswiftc "-sdk" \
            -Xswiftc "`xcrun --sdk iphonesimulator --show-sdk-path`" \
            -Xswiftc "-target" \
            -Xswiftc "x86_64-apple-ios14.0-simulator"
          xcodebuild test -scheme AzureCommunicationUICommon -sdk "`xcrun --sdk iphonesimulator --show-sdk-path`" -destination "name=iPhone 13"
        workingDirectory: AzureCommunicationUI/sdk/AzureCommunicationUICommon
        displayName: "Build and test AzureCommunicationUICommon"

      - script: |
          export SLATHER_FILE=$(system.defaultWorkingDirectory)/AzureCommunicationUI/.slather.yml
          {
              echo 'coverage_service: cobertura_xml'
              echo 'output_directory: slather-report'
              echo 'scheme: AzureCommunicationUICalling'
              echo 'workspace: AzureCommunicationUI.xcworkspace'
              echo 'xcodeproj: sdk/AzureCommunicationUICalling/AzureCommunicationUICalling.xcodeproj'
              echo 'ignore:'
              echo '    - AzureCommunicationUIDemoApp/**'
              echo '    - sdk/AzureCommunicationUICalling/Tests/**'
              echo '    - sdk/AzureCommunicationUIChat/Tests/**'
              echo '    - sdk/AzureCommunicationUICommon/Tests/**'
              echo '    - sdk/**/*View*'
              echo '    - sdk/**/*Button*'
          } >> $SLATHER_FILE
        displayName: "Inject .slather.yml file"

      - task: Xcode@5
        displayName: "Build UI Calling Library & unit test"
        inputs:
          configuration: Release
          sdk: iphoneos
          xcWorkspacePath: AzureCommunicationUI/AzureCommunicationUI.xcworkspace
          scheme: AzureCommunicationUICalling
          xcodeVersion: default
          args: "-verbose"

      - task: Xcode@5
        displayName: "Xcode Calling Unit Test "
        inputs:
          actions: test
          configuration: Debug
          sdk: iphoneos
          xcWorkspacePath: AzureCommunicationUI/AzureCommunicationUI.xcworkspace
          scheme: AzureCommunicationUICalling
          xcodeVersion: default
          destinationPlatformOption: iOS
          destinationSimulators: "iPhone 12 Pro"
          publishJUnitResults: true

      - script: |
          cd AzureCommunicationUI
          slather
          mv slather-report/cobertura.xml slather-report/calling-cobertura.xml
        displayName: "Run slather"

      - task: PublishPipelineArtifact@1
        displayName: "Publish Code Coverage Report to Pipeline"
        inputs:
          targetPath: "$(System.DefaultWorkingDirectory)/AzureCommunicationUI/slather-report/calling-cobertura.xml"
          artifact: "CallingCoberturaReport"
          publishLocation: "pipeline"

  - job: BuildChat
    displayName: "Build UI Chat Library & unit test"
    pool:
      name: vsts-mac-1231-xcode-1331
      demands: xcode
    condition: and(succeeded(),or(eq(variables['System.PullRequest.TargetBranch'], 'feature/chat'),or(contains(variables['Build.SourceBranch'], 'chat'), contains(variables['Build.SourceBranch'], 'Chat'))))
    steps:
      - task: servicetree-link-build-task@1
        displayName: "ServiceTree: [$(BuildOutputUsage)] "
        inputs:
          ServiceTreeGateway: "ServiceTree Gateway"
          Service: "e38fcba7-191b-47ad-bb71-aeff7c983e3f"
        condition: always()

      - task: CocoaPods@0
        displayName: "pod install"
        inputs:
          workingDirectory: AzureCommunicationUI
          forceRepoUpdate: true
          projectDirectory: AzureCommunicationUI

      - script: |
          swift build -v \
            -Xswiftc "-sdk" \
            -Xswiftc "`xcrun --sdk iphonesimulator --show-sdk-path`" \
            -Xswiftc "-target" \
            -Xswiftc "x86_64-apple-ios14.0-simulator"

          xcodebuild test -scheme AzureCommunicationUICommon -sdk "`xcrun --sdk iphonesimulator --show-sdk-path`" -destination "name=iPhone 13"
        workingDirectory: AzureCommunicationUI/sdk/AzureCommunicationUICommon
        displayName: "Build and test AzureCommunicationUICommon"

      - script: |
          export SLATHER_FILE=$(system.defaultWorkingDirectory)/AzureCommunicationUI/.slather.yml
          {
              echo 'coverage_service: cobertura_xml'
              echo 'output_directory: slather-report'
              echo 'scheme: AzureCommunicationUIChat'
              echo 'workspace: AzureCommunicationUI.xcworkspace'
              echo 'xcodeproj: sdk/AzureCommunicationUIChat/AzureCommunicationUIChat.xcodeproj'
              echo 'ignore:'
              echo '    - AzureCommunicationUIDemoApp/**'
              echo '    - sdk/AzureCommunicationUICalling/Tests/**'
              echo '    - sdk/AzureCommunicationUIChat/Tests/**'
              echo '    - sdk/AzureCommunicationUICommon/Tests/**'
              echo '    - sdk/**/*View*'
              echo '    - sdk/**/*Button*'
          } >> $SLATHER_FILE
        displayName: "Inject .slather.yml file"

      - task: Xcode@5
        displayName: "Xcode Chat build"
        inputs:
          configuration: Release
          sdk: iphoneos
          xcWorkspacePath: AzureCommunicationUI/AzureCommunicationUI.xcworkspace
          scheme: AzureCommunicationUIChat
          xcodeVersion: default
          args: "-verbose"
     
      - task: Xcode@5
        displayName: "Xcode Chat Unit Test"
        inputs:
          actions: test
          configuration: Debug
          sdk: iphoneos
          xcWorkspacePath: AzureCommunicationUI/AzureCommunicationUI.xcworkspace
          scheme: AzureCommunicationUIChat
          xcodeVersion: default
          destinationPlatformOption: iOS
          destinationSimulators: "iPhone 12 Pro"
          args: "-verbose"
          publishJUnitResults: true

      - script: |
          cd AzureCommunicationUI
          slather
          mv slather-report/cobertura.xml slather-report/chat-cobertura.xml
        displayName: "Run slather"

      - task: PublishPipelineArtifact@1
        displayName: "Publish Code Coverage Report to Pipeline"
        inputs:
          targetPath: "$(System.DefaultWorkingDirectory)/AzureCommunicationUI/slather-report/chat-cobertura.xml"
          artifact: "ChatCoberturaReport"
          publishLocation: "pipeline"

  - job: CombineReports
    displayName: "Publish Reports"
    dependsOn:
     - BuildCalling
     - BuildChat

    steps:
      # - task: UseDotNet@2
      #   displayName: "Use .NET Core sdk 3.1.x"
      #   inputs:
      #     version: 3.1.x
      - task: DownloadBuildArtifacts@1
        displayName: "Get cobertura files from calling build"
        inputs:
          artifactName: "CallingCoberturaReport"
          buildType: "current"
          downloadPath: "$(System.ArtifactsDirectory)/cobertura"

      - task: DownloadBuildArtifacts@1
        displayName: "Get cobertura files from chat build"
        inputs:
          artifactName: "ChatCoberturaReport"
          buildType: "current"
          downloadPath: "$(System.ArtifactsDirectory)/cobertura"

      - task: reportgenerator@5
        displayName: "Combine Cobertura Reports"
        inputs:
          reports: "$(System.ArtifactsDirectory)/cobertura/*.xml"
          targetdir: $(Pipeline.Workspace)/coveragereport

      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: "Cobertura"
          summaryFileLocation: $(Pipeline.Workspace)/coveragereport/cobertura.xml

      - task: BuildQualityChecks@8
        displayName: "Check build quality"
        enabled: false
        inputs:
          checkCoverage: true
          coverageFailOption: fixed
          coverageType: lines

      # - task: PublishCodeCoverageResults@1
      #   displayName: "Publish code coverage from $(System.DefaultWorkingDirectory)/AzureCommunicationUI/slather-report/cobertura.xml"
      #   inputs:
      #     codeCoverageTool: Cobertura
      #     summaryFileLocation: "$(System.DefaultWorkingDirectory)/AzureCommunicationUI/slather-report/cobertura.xml"